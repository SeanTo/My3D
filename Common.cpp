#include "stdafx.h"
#include "Common.h"

////////////////////////////////////////////////////////////////////////////////
// global variable

COLORREF crText = RGB(0, 0, 0);
COLORREF crText2 = RGB(255, 255, 255);
COLORREF crBack = RGB(203, 233, 241);
COLORREF crYellow = RGB(255, 255, 0);
COLORREF crPurple = RGB(255, 0, 255);
COLORREF crRed = RGB(255, 0, 0);
COLORREF crGreen = RGB(0, 128, 0);
COLORREF crBlue = RGB(0, 0, 255);
COLORREF crCyan = RGB(0, 128, 128);
COLORREF crGray = RGB(208, 208, 208);

// 固定45段号码
const CString FIXED_SECT_STR[] = {
	_T("015"), _T("236"), _T("125"),
		_T("017"), _T("456"), _T("019"),
		_T("458"), _T("026"), _T("346"),
		_T("028"), _T("349"), _T("127"),
		_T("036"), _T("258"), _T("138"),
		_T("569"), _T("578"), _T("456"),
		_T("347"), _T("048"), _T("479"),
		_T("056"), _T("279"), _T("058"),
		_T("069"), _T("239"), _T("126"),
		_T("035"), _T("128"), _T("235"),
		_T("016"), _T("129"), _T("237"),
		_T("039"), _T("029"), _T("345"),
		_T("027"), _T("347"), _T("459"),
		_T("018"), _T("457"), _T("025"),
		_T("348"), _T("123"), _T("028")
};

// 自动大底算法
const CString AUTO_BASE_STR[] = {
	_T("动态智能"), _T("段式-强"), _T("段式-弱"), _T("号码继承"), _T("012 继承"),
		_T("形态反转"), _T("均值 2-7"), _T("金三角"), _T("步长法"), _T("近期相关"),
		_T("两码跨4连"), _T("两码和3连"), _T("两码积3连"), _T("跨度3连"), _T("和尾3连"),
		_T("奇偶3连"), _T("大小3连"), _T("形态3连"), _T("012路3邻"), _T("斜码三2连"),
		_T("豹子"), _T("组三"), _T("组六")
};

// 动态智能子算法
const CString APTITUD_STR[] = {
	_T("内置胆码"), _T("倒推更多"), _T("倒推最近"), _T("杀两码"), _T("定位杀"),
		_T("两码积"), _T("两码和"), _T("两码跨"), _T("超出1"), _T("超出1"), _T("超出1")
};

